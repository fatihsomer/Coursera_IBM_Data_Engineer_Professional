export CLOUDANTURL="abc"


Task 1:
curl -X POST $CLOUDANTURL/movies/_bulk_docs -H content-type:application/json -d @movies.json


Task 2:
curl -X POST $CLOUDANTURL/movies/_index \
-H"Content-Type: application/json" \
-d'{
    "index": {
        "fields": ["Director"]
    }
}'


Task 3:
curl -X POST $CLOUDANTURL/movies/_find \
-H"Content-Type: application/json" \
-d'{
	"selector":
	{
		"Director":"Richard Gage"
	}
}'


Task 4:
curl -X POST $CLOUDANTURL/movies/_index \
-H"Content-Type: application/json" \
-d'{
    "index": {
        "fields": ["title"]
    }
}'


Task 5:
curl -X POST $CLOUDANTURL/movies/_find \
-H"Content-Type: application/json" \
-d'{
	"selector":
	{
		"title":"Top Dog"
	},
	"fields":[
		"year",
		"Director"
	]
}'

Task 6:
couchexport --url $CLOUDANTURL --db movies --type jsonl > couchexport_movies.json


Task 7:
mongoimport -u root -p xyz --authenticationDatabase admin --db entertainment --collection movies --file couchexport_movies.json


mongo -u root -p xyz --authenticationDatabase admin local

Task 8:
use entertainment
db.movies.aggregate([
{
    "$group":{
        "_id":"$year",
        "moviecount":{"$sum":1}
        }
},
{
	"$sort":{"moviecount":-1}
},
{
	"$limit":1
}
])


Task 9:
db.movies.aggregate([
{
    "$match":{ "year": { "$gt": 1999 } }
},
{
    "$group":{
        "_id":"$year",
        "moviecount": { "$sum": 1 }
        }
},
{
	"$sort":{"moviecount":-1}
}
])


Task 10:
db.movies.aggregate([
{
    "$match":{ "year": { "$eq": 2007 } }
},
{
    "$group":{
        "_id":"$year",
        "average_vote": { "$avg": "$Votes" }
        }
}
])


Task 11:
mongoexport -u root -p xyz --authenticationDatabase admin --db entertainment --collection movies --out partial_data.csv --type=csv --fields _id,title,year,rating,director


Task 12:
cqlsh --username cassandra --password xyz
CREATE KEYSPACE entertainment   WITH replication = {'class':'SimpleStrategy', 'replication_factor' : 3};
use entertainment;
create table movies( id text primary key, title text, year text, rating text, director text );
COPY entertainment.movies(id,title,year,rating,director) FROM 'partial_data.csv' WITH DELIMITER=',' AND HEADER=TRUE;


Task 13:
select count(*) from movies;


Task 14:
create index rating_index on movies(rating);


Task 15:
select count(*) from movies where rating='G';

